name: Job Scraper

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: read
  
jobs:
  scrape:
    runs-on: ubuntu-latest
    environment: production
    
    env:
      FIREBASE_CREDENTIALS_PATH: config/firebase-adminsdk-fbsvc-9318d491d4.json
      
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create config directory
      run: mkdir -p config
        
    - name: Set up Firebase credentials
      run: |
        echo '${{ secrets.FIREBASE_CREDENTIALS }}' | python3 -c "import sys, json; print(json.dumps(json.loads(sys.stdin.read())))" > $FIREBASE_CREDENTIALS_PATH
        # Debug: Check if file exists and has content (will not show sensitive data)
        ls -l config/
        echo "First few characters of credentials file (safe part):"
        head -c 50 $FIREBASE_CREDENTIALS_PATH
      
    - name: Create .env file
      run: |
        echo "FIREBASE_CREDENTIALS_PATH=$FIREBASE_CREDENTIALS_PATH" > .env
        echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
        echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env
        
    - name: Run job scraper
      run: python job_scraper.py 